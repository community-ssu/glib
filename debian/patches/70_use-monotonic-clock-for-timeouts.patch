Index: glib-2.20.3/configure.in
===================================================================
--- glib-2.20.3.orig/configure.in	2009-06-18 15:04:46.000000000 +0200
+++ glib-2.20.3/configure.in	2009-06-18 15:04:46.000000000 +0200
@@ -2300,6 +2300,7 @@
     AC_DEFINE(HAVE_CLOCK_GETTIME, 1)
     G_THREAD_LIBS="$G_THREAD_LIBS -lrt"
     G_THREAD_LIBS_FOR_GTHREAD="$G_THREAD_LIBS_FOR_GTHREAD -lrt"
+    G_LIBS_EXTRA="$G_LIBS_EXTRA -lrt"
   ])
 ])
 
@@ -2592,13 +2593,13 @@
 
 case $host in
   *-*-cygwin*)
-	G_LIBS_EXTRA="-luser32 -lkernel32"
+	G_LIBS_EXTRA="$G_LIBS_EXTRA -luser32 -lkernel32"
     ;;
   *-*-mingw*)
-	G_LIBS_EXTRA="-lws2_32 -lole32"
+	G_LIBS_EXTRA="$G_LIBS_EXTRA -lws2_32 -lole32"
     ;;
   *)
-	G_LIBS_EXTRA=""
+	G_LIBS_EXTRA="$G_LIBS_EXTRA"
     ;;
 esac
 AC_SUBST(G_LIBS_EXTRA)
Index: glib-2.20.3/glib/gmain.c
===================================================================
--- glib-2.20.3.orig/glib/gmain.c	2009-06-18 14:58:44.000000000 +0200
+++ glib-2.20.3/glib/gmain.c	2009-06-18 15:04:46.000000000 +0200
@@ -77,6 +77,10 @@
 
 #include "galias.h"
 
+#if defined(HAVE_CLOCK_GETTIME) && defined(HAVE_MONOTONIC_CLOCK)
+#define USE_CLOCK_GETTIME 1
+#endif
+
 /* Types */
 
 typedef struct _GTimeoutSource GTimeoutSource;
@@ -158,6 +162,7 @@
   GPollFunc poll_func;
 
   GTimeVal current_time;
+  GTimeVal current_time_monotonic;
   gboolean time_is_current;
 };
 
@@ -229,6 +234,9 @@
 
 /* Forward declarations */
 
+static void g_get_current_time_monotonic        (GTimeVal     *result);
+static void g_source_get_current_time_monotonic (GSource      *source,
+						 GTimeVal     *timeval);
 static void g_source_unref_internal             (GSource      *source,
 						 GMainContext *context,
 						 gboolean      have_lock);
@@ -1477,6 +1485,20 @@
 }
 
 static void
+g_get_current_time_monotonic (GTimeVal *result)
+{
+#ifdef USE_CLOCK_GETTIME
+  struct timespec r;
+
+  clock_gettime (CLOCK_MONOTONIC, &r);
+  result->tv_sec = r.tv_sec;
+  result->tv_usec = r.tv_nsec / 1000;
+#else
+  g_get_current_time (result);
+#endif
+}
+
+static void
 g_main_dispatch_free (gpointer dispatch)
 {
   g_slice_free (GMainDispatch, dispatch);
@@ -2965,6 +2987,7 @@
   if (!context->time_is_current)
     {
       g_get_current_time (&context->current_time);
+      g_get_current_time_monotonic (&context->current_time_monotonic);
       context->time_is_current = TRUE;
     }
   
@@ -2973,6 +2996,30 @@
   UNLOCK_CONTEXT (context);
 }
 
+static void
+g_source_get_current_time_monotonic (GSource  *source,
+				     GTimeVal *timeval)
+{
+  GMainContext *context;
+
+  g_return_if_fail (source->context != NULL);
+
+  context = source->context;
+
+  LOCK_CONTEXT (context);
+
+  if (!context->time_is_current)
+    {
+      g_get_current_time (&context->current_time);
+      g_get_current_time_monotonic (&context->current_time_monotonic);
+      context->time_is_current = TRUE;
+    }
+
+  *timeval = context->current_time_monotonic;
+
+  UNLOCK_CONTEXT (context);
+}
+
 /**
  * g_main_context_set_poll_func:
  * @context: a #GMainContext
@@ -3177,7 +3224,7 @@
   
   GTimeoutSource *timeout_source = (GTimeoutSource *)source;
 
-  g_source_get_current_time (source, &current_time);
+  g_source_get_current_time_monotonic (source, &current_time);
 
   sec = timeout_source->expiration.tv_sec - current_time.tv_sec;
   msec = (timeout_source->expiration.tv_usec - current_time.tv_usec) / 1000;
@@ -3226,8 +3273,8 @@
   GTimeVal current_time;
   GTimeoutSource *timeout_source = (GTimeoutSource *)source;
 
-  g_source_get_current_time (source, &current_time);
-  
+  g_source_get_current_time_monotonic (source, &current_time);
+
   return ((timeout_source->expiration.tv_sec < current_time.tv_sec) ||
 	  ((timeout_source->expiration.tv_sec == current_time.tv_sec) &&
 	   (timeout_source->expiration.tv_usec <= current_time.tv_usec)));
@@ -3251,7 +3298,7 @@
     {
       GTimeVal current_time;
 
-      g_source_get_current_time (source, &current_time);
+      g_source_get_current_time_monotonic (source, &current_time);
       g_timeout_set_expiration (timeout_source, &current_time);
 
       return TRUE;
@@ -3281,7 +3328,7 @@
 
   timeout_source->interval = interval;
 
-  g_get_current_time (&current_time);
+  g_get_current_time_monotonic (&current_time);
   g_timeout_set_expiration (timeout_source, &current_time);
   
   return source;
@@ -3314,7 +3361,7 @@
   timeout_source->interval = 1000*interval;
   timeout_source->granularity = 1000;
 
-  g_get_current_time (&current_time);
+  g_get_current_time_monotonic (&current_time);
   g_timeout_set_expiration (timeout_source, &current_time);
 
   return source;
