Index: glib-2.20.1/gio/gsimpleasyncresult.c
===================================================================
--- glib-2.20.1.orig/gio/gsimpleasyncresult.c	2009-04-01 01:04:20.000000000 +0200
+++ glib-2.20.1/gio/gsimpleasyncresult.c	2009-05-15 12:36:58.000000000 +0200
@@ -145,6 +145,15 @@ G_DEFINE_TYPE_WITH_CODE (GSimpleAsyncRes
 						g_simple_async_result_async_result_iface_init))
 
 static void
+clear_op_res (GSimpleAsyncResult *simple)
+{
+  if (simple->destroy_op_res)
+    simple->destroy_op_res (simple->op_res.v_pointer);
+  simple->destroy_op_res = NULL;
+  simple->op_res.v_ssize = 0;
+}
+
+static void
 g_simple_async_result_finalize (GObject *object)
 {
   GSimpleAsyncResult *simple;
@@ -154,8 +163,7 @@ g_simple_async_result_finalize (GObject 
   if (simple->source_object)
     g_object_unref (simple->source_object);
 
-  if (simple->destroy_op_res)
-    simple->destroy_op_res (simple->op_res.v_pointer);
+  clear_op_res (simple);
 
   if (simple->error)
     g_error_free (simple->error);
@@ -375,6 +383,7 @@ g_simple_async_result_set_op_res_gpointe
 {
   g_return_if_fail (G_IS_SIMPLE_ASYNC_RESULT (simple));
 
+  clear_op_res (simple);
   simple->op_res.v_pointer = op_res;
   simple->destroy_op_res = destroy_op_res;
 }
@@ -407,6 +416,7 @@ g_simple_async_result_set_op_res_gssize 
                                          gssize              op_res)
 {
   g_return_if_fail (G_IS_SIMPLE_ASYNC_RESULT (simple));
+  clear_op_res (simple);
   simple->op_res.v_ssize = op_res;
 }
 
@@ -437,6 +447,7 @@ g_simple_async_result_set_op_res_gboolea
                                            gboolean            op_res)
 {
   g_return_if_fail (G_IS_SIMPLE_ASYNC_RESULT (simple));
+  clear_op_res (simple);
   simple->op_res.v_boolean = !!op_res;
 }
 
